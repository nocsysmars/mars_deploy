input {
    tcp {
        port => 5514
        type => "syslog"
    }
    
    udp {
        port => 5514
        type => "syslog"
    }

    tcp {
        port => 6343
        type => "sflow"
        codec => sflow {}
    }

    udp {
        port => 6343
        type => "sflow"
        codec => sflow { }
    }

    udp {
        port => 25826
        buffer_size => 1452
        codec => collectd {}
    }
}

## Add your filters / logstash plugins configuration here
filter {
    if [type] == "syslog" {
        grok {
            match => {
                "message" => [ 
                    "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}: :- %{DATA:syslog_function}: %{GREEDYDATA:syslog_message}",
                    "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}: %{GREEDYDATA:syslog_message}"
                ]
            }
        }
        
        if [syslog_function] == "setHostIntfsOperStatus" {
            grok {
                match => {
                    "syslog_message" => "Set operation status %{WORD:[@metadata][switch_port_status]} to host interface %{WORD:[@metadata][switch_port]}"
                }
            }
            
            if [@metadata][switch_port_status] == "DOWN" or [@metadata][switch_port_status] == "UP" {
                mutate {
                    add_field => { "switch_port_status" => "%{[@metadata][switch_port_status]}" 
                                   "switch_port" =>  "%{[@metadata][switch_port]}" 
                                 }
                }
            }
        }
    }
    
    date {
        match => [ "timestamp" , "YYYY/MMM/dd:HH:mm:ss" ]
    }
}

output {
    elasticsearch {
        index => "logstash"
        hosts => "127.0.0.1:9200"
    }

    if [syslog_function] == "setHostIntfsOperStatus" {
        if [@metadata][switch_port_status] == "DOWN" or [@metadata][switch_port_status] == "UP" {       
            websocket {
                id => "logstash_websocket"
                codec => "json"
                host => "0.0.0.0"
                port => 3232
            }
        }
    }
    stdout { codec => rubydebug }
    
}
